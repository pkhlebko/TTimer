{"version":3,"sources":["_timer.js"],"names":["trialTimer","TTimer","settings","timeLimit","gateLimit","startTime","pauseStart","mainTimer","timerFunc","limit","pauseCounter","gatesCounter","finish","type","finalTime","getTime","withPenalty","onTimeUpdate","Math","round","onFinish","nextSection","counter","sectionLimit","sections","onNextSection","updateTime","setTimeout","this","strt","onStart","add30","onPenalty","add120","pause","onPauseResume","clearTimeout"],"mappings":"AAAAA,WAAWC,OAAS,SAASC,GACXA,EAASC,UAAzB,IAEEC,EACAC,EACAC,EAGAC,EACAC,EAPAC,EAAQP,EAASC,UAIjBO,EAAe,EACfC,EAAe,EA6CjB,SAASC,EAAOC,GACd,IAAIC,EAAYC,UAAYV,EAAYK,EACpCM,EAAcF,EAAYZ,EAASC,UAAYM,EAEnDI,EAAOA,GAAQ,SAEfL,EAAY,aACZN,EAASe,aAAaC,KAAKC,MAAML,GAAYL,GAC7CP,EAASkB,SAASN,EAAWE,EAAaH,GAG5C,SAASQ,EAAYC,GACnBlB,EAAYkB,EAAUpB,EAASqB,eAC/BZ,EAEmBT,EAASsB,SAC1BZ,EAAO,QAEPV,EAASuB,cAAcd,GAI3B,SAASe,IACP,IAAIJ,EAAUP,UAAYV,EAAYK,EAEvBN,GAAXkB,GACFD,EAAYC,GAGdpB,EAASe,aAAaK,EAASb,EAAQa,EAASlB,EAAYkB,GAExDA,EAAUb,EACZF,EAAYoB,WAAW,WACrBnB,KACC,KAEHI,EAAO,SAMX,OAnFAgB,KAAKC,KAAO,WACVxB,EAAYU,UACZP,EAAYkB,EAEZxB,EAAS4B,UACTT,EAAY,GACZb,KAGFoB,KAAKP,YAAc,WACjBA,EAAYN,UAAYV,IAG1BuB,KAAKG,MAAQ,WACXtB,GAAS,GACTL,GAAa,GACbF,EAAS8B,UAAU,KAGrBJ,KAAKK,OAAS,WACZxB,GAAS,IACTP,EAAS8B,UAAU,MAGrBJ,KAAKM,MAAQ,WACP5B,GACFI,GAAgBK,UAAYT,EAC5BA,EAAa,MACbE,EAAYkB,KAEZxB,EAASiC,kBAETC,aAAa7B,GACbC,EAAY,aACZF,EAAaS,UACbb,EAASiC,eAAc,KAI3BP,KAAKhB,OAASA,EA4CPgB","file":"_timer.js","sourcesContent":["trialTimer.TTimer = function(settings) { \r\n  var timeLimit = settings.timeLimit,\r\n    limit = settings.timeLimit,\r\n    gateLimit, \r\n    startTime,\r\n    pauseStart,\r\n    pauseCounter = 0,\r\n    gatesCounter = 0,\r\n    mainTimer,\r\n    timerFunc;\r\n\r\n  this.strt = function() {\r\n    startTime = getTime();\r\n    timerFunc = updateTime;\r\n\r\n    settings.onStart();\r\n    nextSection(0);\r\n    timerFunc();\r\n  };\r\n\r\n  this.nextSection = function() {\r\n    nextSection(getTime() - startTime);\r\n  };\r\n\r\n  this.add30 = function() {\r\n    limit -= 30;\r\n    gateLimit -= 30;\r\n    settings.onPenalty(30);\r\n  };\r\n\r\n  this.add120 = function() {\r\n    limit -= 120;\r\n    settings.onPenalty(120);\r\n  };\r\n\r\n  this.pause = function() {\r\n    if (pauseStart) {\r\n      pauseCounter += getTime() - pauseStart;\r\n      pauseStart = null;\r\n      timerFunc = updateTime;\r\n      timerFunc();\r\n      settings.onPauseResume();\r\n    } else {\r\n      clearTimeout(mainTimer);\r\n      timerFunc = function() {};\r\n      pauseStart = getTime();\r\n      settings.onPauseResume(true);\r\n    }\r\n  };\r\n\r\n  this.finish = finish;\r\n  \r\n  function finish(type) {\r\n    var finalTime = getTime() - startTime - pauseCounter,\r\n        withPenalty = finalTime + settings.timeLimit - limit;\r\n    \r\n    type = type || 'finish';\r\n\r\n    timerFunc = function() {};\r\n    settings.onTimeUpdate(Math.round(finalTime), limit);\r\n    settings.onFinish(finalTime, withPenalty, type);\r\n  }\r\n\r\n  function nextSection(counter) {\r\n    gateLimit = counter + settings.sectionLimit;\r\n    gatesCounter++;\r\n    \r\n    if (gatesCounter > settings.sections) {\r\n      finish('auto');\r\n    } else {\r\n      settings.onNextSection(gatesCounter);\r\n    }\r\n  }\r\n\r\n  function updateTime() {\r\n    var counter = getTime() - startTime - pauseCounter;\r\n\r\n    if (counter >= gateLimit) {\r\n      nextSection(counter);\r\n    }\r\n\r\n    settings.onTimeUpdate(counter, limit - counter, gateLimit - counter);\r\n\r\n    if (counter < limit) {\r\n      mainTimer = setTimeout(function() {\r\n        timerFunc();\r\n      }, 500);\r\n    } else {\r\n      finish('limit');\r\n    }\r\n  }\r\n\r\n\r\n\r\n  return this;\r\n};"]}